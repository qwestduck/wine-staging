From 1e5920e18facb943edaf4bff76dd863550338cf1 Mon Sep 17 00:00:00 2001
From: Michael Stefaniuc <mstefani@winehq.org>
Date: Mon, 23 Jul 2018 09:10:49 +0200
Subject: [PATCH] inetcomm: Use the ARRAY_SIZE() macro

Signed-off-by: Michael Stefaniuc <mstefani@winehq.org>
---
 dlls/inetcomm/mimeole.c  |  7 +++----
 dlls/inetcomm/protocol.c | 18 +++++++++---------
 2 files changed, 12 insertions(+), 13 deletions(-)

diff --git a/dlls/inetcomm/mimeole.c b/dlls/inetcomm/mimeole.c
index 681ca820d4..cb9ebcc382 100644
--- a/dlls/inetcomm/mimeole.c
+++ b/dlls/inetcomm/mimeole.c
@@ -1581,9 +1581,8 @@ static HRESULT decode_base64(IStream *input, IStream **ret_stream)
 
         while(1) {
             /* skip invalid chars */
-            while(ptr < end &&
-                  (*ptr >= sizeof(base64_decode_table)/sizeof(*base64_decode_table)
-                   || base64_decode_table[*ptr] == -1))
+            while(ptr < end && (*ptr >= ARRAY_SIZE(base64_decode_table)
+                                || base64_decode_table[*ptr] == -1))
                 ptr++;
             if(ptr == end)
                 break;
@@ -3715,7 +3714,7 @@ HRESULT WINAPI MimeOleObjectFromMoniker(BINDF bindf, IMoniker *moniker, IBindCtx
         return E_OUTOFMEMORY;
 
     memcpy(mhtml_url, mhtml_prefixW, sizeof(mhtml_prefixW));
-    strcpyW(mhtml_url + sizeof(mhtml_prefixW)/sizeof(WCHAR), display_name);
+    strcpyW(mhtml_url + ARRAY_SIZE(mhtml_prefixW), display_name);
     HeapFree(GetProcessHeap(), 0, display_name);
 
     hres = CreateURLMoniker(NULL, mhtml_url, moniker_new);
diff --git a/dlls/inetcomm/protocol.c b/dlls/inetcomm/protocol.c
index 028463a269..c6a59fee7c 100644
--- a/dlls/inetcomm/protocol.c
+++ b/dlls/inetcomm/protocol.c
@@ -83,16 +83,16 @@ static HRESULT parse_mhtml_url(const WCHAR *url, mhtml_url_t *r)
 {
     const WCHAR *p;
 
-    if(strncmpiW(url, mhtml_prefixW, sizeof(mhtml_prefixW)/sizeof(WCHAR)))
+    if(strncmpiW(url, mhtml_prefixW, ARRAY_SIZE(mhtml_prefixW)))
         return E_FAIL;
 
-    r->mhtml = url + sizeof(mhtml_prefixW)/sizeof(WCHAR);
+    r->mhtml = url + ARRAY_SIZE(mhtml_prefixW);
     p = strchrW(r->mhtml, '!');
     if(p) {
         r->mhtml_len = p - r->mhtml;
         /* FIXME: We handle '!' and '!x-usc:' in URLs as the same thing. Those should not be the same. */
-        if(!strncmpW(p, mhtml_separatorW, sizeof(mhtml_separatorW)/sizeof(WCHAR)))
-            p += sizeof(mhtml_separatorW)/sizeof(WCHAR);
+        if(!strncmpW(p, mhtml_separatorW, ARRAY_SIZE(mhtml_separatorW)))
+            p += ARRAY_SIZE(mhtml_separatorW);
         else
             p++;
     }else {
@@ -657,7 +657,7 @@ static HRESULT WINAPI MimeHtmlProtocolInfo_CombineUrl(IInternetProtocolInfo *ifa
         DWORD cchResult, DWORD* pcchResult, DWORD dwReserved)
 {
     MimeHtmlProtocol *This = impl_from_IInternetProtocolInfo(iface);
-    size_t len = sizeof(mhtml_prefixW)/sizeof(WCHAR);
+    size_t len = ARRAY_SIZE(mhtml_prefixW);
     mhtml_url_t url;
     WCHAR *p;
     HRESULT hres;
@@ -670,26 +670,26 @@ static HRESULT WINAPI MimeHtmlProtocolInfo_CombineUrl(IInternetProtocolInfo *ifa
     if(FAILED(hres))
         return hres;
 
-    if(!strncmpiW(pwzRelativeUrl, mhtml_prefixW, sizeof(mhtml_prefixW)/sizeof(WCHAR))) {
+    if(!strncmpiW(pwzRelativeUrl, mhtml_prefixW, ARRAY_SIZE(mhtml_prefixW))) {
         FIXME("Relative URL is mhtml protocol\n");
         return INET_E_USE_DEFAULT_PROTOCOLHANDLER;
     }
 
     len += url.mhtml_len;
     if(*pwzRelativeUrl)
-        len += strlenW(pwzRelativeUrl) + sizeof(mhtml_separatorW)/sizeof(WCHAR);
+        len += strlenW(pwzRelativeUrl) + ARRAY_SIZE(mhtml_separatorW);
     if(len >= cchResult) {
         *pcchResult = 0;
         return E_FAIL;
     }
 
     memcpy(pwzResult, mhtml_prefixW, sizeof(mhtml_prefixW));
-    p = pwzResult + sizeof(mhtml_prefixW)/sizeof(WCHAR);
+    p = pwzResult + ARRAY_SIZE(mhtml_prefixW);
     memcpy(p, url.mhtml, url.mhtml_len*sizeof(WCHAR));
     p += url.mhtml_len;
     if(*pwzRelativeUrl) {
         memcpy(p, mhtml_separatorW, sizeof(mhtml_separatorW));
-        p += sizeof(mhtml_separatorW)/sizeof(WCHAR);
+        p += ARRAY_SIZE(mhtml_separatorW);
         strcpyW(p, pwzRelativeUrl);
     }else {
         *p = 0;
-- 
2.14.4

