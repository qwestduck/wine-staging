From 2c97bba1bdd02bb72d185635c7f162024be521b4 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Thu, 23 Aug 2018 12:22:07 +1000
Subject: [PATCH 1/3] mfplat: Forward IMFMediaType to IMFAttributes

Signed-off-by: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
---
 dlls/mfplat/main.c | 166 ++++++++++++---------------------------------
 1 file changed, 42 insertions(+), 124 deletions(-)

diff --git a/dlls/mfplat/main.c b/dlls/mfplat/main.c
index df61f3cdc9..744f074b56 100644
--- a/dlls/mfplat/main.c
+++ b/dlls/mfplat/main.c
@@ -31,7 +31,7 @@
 #include "mfapi.h"
 #include "mfidl.h"
 #include "mferror.h"
-
+#include "wine/heap.h"
 #include "wine/debug.h"
 #include "wine/unicode.h"
 
@@ -890,6 +890,12 @@ static const IMFAttributesVtbl mfattributes_vtbl =
     mfattributes_CopyAllItems
 };
 
+static void init_attribute_object(mfattributes *object, UINT32 size)
+{
+    object->ref = 1;
+    object->IMFAttributes_iface.lpVtbl = &mfattributes_vtbl;
+}
+
 /***********************************************************************
  *      MFCreateAttributes (mfplat.@)
  */
@@ -903,10 +909,9 @@ HRESULT WINAPI MFCreateAttributes(IMFAttributes **attributes, UINT32 size)
     if(!object)
         return E_OUTOFMEMORY;
 
-    object->ref = 1;
-    object->IMFAttributes_iface.lpVtbl = &mfattributes_vtbl;
-
+    init_attribute_object(object, size);
     *attributes = &object->IMFAttributes_iface;
+
     return S_OK;
 }
 
@@ -1077,6 +1082,7 @@ HRESULT WINAPI MFCreateSourceResolver(IMFSourceResolver **resolver)
 
 typedef struct _mfmediatype
 {
+    mfattributes attributes;
     IMFMediaType IMFMediaType_iface;
     LONG ref;
 } mfmediatype;
@@ -1137,269 +1143,179 @@ static ULONG WINAPI mediatype_Release(IMFMediaType *iface)
 static HRESULT WINAPI mediatype_GetItem(IMFMediaType *iface, REFGUID key, PROPVARIANT *value)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p, %s, %p\n", This, debugstr_guid(key), value);
-
-    return E_NOTIMPL;
+    return IMFAttributes_GetItem(&This->attributes.IMFAttributes_iface, key, value);
 }
 
 static HRESULT WINAPI mediatype_GetItemType(IMFMediaType *iface, REFGUID key, MF_ATTRIBUTE_TYPE *type)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p, %s, %p\n", This, debugstr_guid(key), type);
-
-    return E_NOTIMPL;
+    return IMFAttributes_GetItemType(&This->attributes.IMFAttributes_iface, key, type);
 }
 
 static HRESULT WINAPI mediatype_CompareItem(IMFMediaType *iface, REFGUID key, REFPROPVARIANT value, BOOL *result)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p, %s, %p, %p\n", This, debugstr_guid(key), value, result);
-
-    return E_NOTIMPL;
+    return IMFAttributes_CompareItem(&This->attributes.IMFAttributes_iface, key, value, result);
 }
 
 static HRESULT WINAPI mediatype_Compare(IMFMediaType *iface, IMFAttributes *attrs, MF_ATTRIBUTES_MATCH_TYPE type,
                 BOOL *result)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p, %p, %d, %p\n", This, attrs, type, result);
-
-    return E_NOTIMPL;
+    return IMFAttributes_Compare(&This->attributes.IMFAttributes_iface, attrs, type, result);
 }
 
 static HRESULT WINAPI mediatype_GetUINT32(IMFMediaType *iface, REFGUID key, UINT32 *value)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p, %s, %p\n", This, debugstr_guid(key), value);
-
-    return E_NOTIMPL;
+    return IMFAttributes_GetUINT32(&This->attributes.IMFAttributes_iface, key, value);
 }
 
 static HRESULT WINAPI mediatype_GetUINT64(IMFMediaType *iface, REFGUID key, UINT64 *value)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p, %s, %p\n", This, debugstr_guid(key), value);
-
-    return E_NOTIMPL;
+    return IMFAttributes_GetUINT64(&This->attributes.IMFAttributes_iface, key, value);
 }
 
 static HRESULT WINAPI mediatype_GetDouble(IMFMediaType *iface, REFGUID key, double *value)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p, %s, %p\n", This, debugstr_guid(key), value);
-
-    return E_NOTIMPL;
+    return IMFAttributes_GetDouble(&This->attributes.IMFAttributes_iface, key, value);
 }
 
 static HRESULT WINAPI mediatype_GetGUID(IMFMediaType *iface, REFGUID key, GUID *value)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p, %s, %p\n", This, debugstr_guid(key), value);
-
-    return E_NOTIMPL;
+    return IMFAttributes_GetGUID(&This->attributes.IMFAttributes_iface, key, value);
 }
 
 static HRESULT WINAPI mediatype_GetStringLength(IMFMediaType *iface, REFGUID key, UINT32 *length)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p, %s, %p\n", This, debugstr_guid(key), length);
-
-    return E_NOTIMPL;
+    return IMFAttributes_GetStringLength(&This->attributes.IMFAttributes_iface, key, length);
 }
 
 static HRESULT WINAPI mediatype_GetString(IMFMediaType *iface, REFGUID key, WCHAR *value,
                 UINT32 size, UINT32 *length)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p, %s, %p, %d, %p\n", This, debugstr_guid(key), value, size, length);
-
-    return E_NOTIMPL;
+    return IMFAttributes_GetString(&This->attributes.IMFAttributes_iface, key, value, size, length);
 }
 
 static HRESULT WINAPI mediatype_GetAllocatedString(IMFMediaType *iface, REFGUID key,
                 WCHAR **value, UINT32 *length)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p, %s, %p, %p\n", This, debugstr_guid(key), value, length);
-
-    return E_NOTIMPL;
+    return IMFAttributes_GetAllocatedString(&This->attributes.IMFAttributes_iface, key, value, length);
 }
 
 static HRESULT WINAPI mediatype_GetBlobSize(IMFMediaType *iface, REFGUID key, UINT32 *size)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p, %s, %p\n", This, debugstr_guid(key), size);
-
-    return E_NOTIMPL;
+    return IMFAttributes_GetBlobSize(&This->attributes.IMFAttributes_iface, key, size);
 }
 
 static HRESULT WINAPI mediatype_GetBlob(IMFMediaType *iface, REFGUID key, UINT8 *buf,
                 UINT32 bufsize, UINT32 *blobsize)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p, %s, %p, %d, %p\n", This, debugstr_guid(key), buf, bufsize, blobsize);
-
-    return E_NOTIMPL;
+    return IMFAttributes_GetBlob(&This->attributes.IMFAttributes_iface, key, buf, bufsize, blobsize);
 }
 
 static HRESULT WINAPI mediatype_GetAllocatedBlob(IMFMediaType *iface, REFGUID key, UINT8 **buf, UINT32 *size)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p, %s, %p, %p\n", This, debugstr_guid(key), buf, size);
-
-    return E_NOTIMPL;
+    return IMFAttributes_GetAllocatedBlob(&This->attributes.IMFAttributes_iface, key, buf, size);
 }
 
 static HRESULT WINAPI mediatype_GetUnknown(IMFMediaType *iface, REFGUID key, REFIID riid, void **ppv)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p, %s, %s, %p\n", This, debugstr_guid(key), debugstr_guid(riid), ppv);
-
-    return E_NOTIMPL;
+    return IMFAttributes_GetUnknown(&This->attributes.IMFAttributes_iface, key, riid, ppv);
 }
 
 static HRESULT WINAPI mediatype_SetItem(IMFMediaType *iface, REFGUID key, REFPROPVARIANT value)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p, %s, %p\n", This, debugstr_guid(key), value);
-
-    return E_NOTIMPL;
+    return IMFAttributes_SetItem(&This->attributes.IMFAttributes_iface, key, value);
 }
 
 static HRESULT WINAPI mediatype_DeleteItem(IMFMediaType *iface, REFGUID key)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p, %s\n", This, debugstr_guid(key));
-
-    return E_NOTIMPL;
+    return IMFAttributes_DeleteItem(&This->attributes.IMFAttributes_iface, key);
 }
 
 static HRESULT WINAPI mediatype_DeleteAllItems(IMFMediaType *iface)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p\n", This);
-
-    return E_NOTIMPL;
+    return IMFAttributes_DeleteAllItems(&This->attributes.IMFAttributes_iface);
 }
 
 static HRESULT WINAPI mediatype_SetUINT32(IMFMediaType *iface, REFGUID key, UINT32 value)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p, %s, %d\n", This, debugstr_guid(key), value);
-
-    return E_NOTIMPL;
+    return IMFAttributes_SetUINT32(&This->attributes.IMFAttributes_iface, key, value);
 }
 
 static HRESULT WINAPI mediatype_SetUINT64(IMFMediaType *iface, REFGUID key, UINT64 value)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p, %s, %s\n", This, debugstr_guid(key), wine_dbgstr_longlong(value));
-
-    return E_NOTIMPL;
+    return IMFAttributes_SetUINT64(&This->attributes.IMFAttributes_iface, key, value);
 }
 
 static HRESULT WINAPI mediatype_SetDouble(IMFMediaType *iface, REFGUID key, double value)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p, %s, %f\n", This, debugstr_guid(key), value);
-
-    return E_NOTIMPL;
+    return IMFAttributes_SetDouble(&This->attributes.IMFAttributes_iface, key, value);
 }
 
 static HRESULT WINAPI mediatype_SetGUID(IMFMediaType *iface, REFGUID key, REFGUID value)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p, %s, %s\n", This, debugstr_guid(key), debugstr_guid(value));
-
-    return E_NOTIMPL;
+    return IMFAttributes_SetGUID(&This->attributes.IMFAttributes_iface, key, value);
 }
 
 static HRESULT WINAPI mediatype_SetString(IMFMediaType *iface, REFGUID key, const WCHAR *value)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p, %s, %s\n", This, debugstr_guid(key), debugstr_w(value));
-
-    return E_NOTIMPL;
+    return IMFAttributes_SetString(&This->attributes.IMFAttributes_iface, key, value);
 }
 
 static HRESULT WINAPI mediatype_SetBlob(IMFMediaType *iface, REFGUID key, const UINT8 *buf, UINT32 size)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p, %s, %p, %d\n", This, debugstr_guid(key), buf, size);
-
-    return E_NOTIMPL;
+    return IMFAttributes_SetBlob(&This->attributes.IMFAttributes_iface, key, buf, size);
 }
 
 static HRESULT WINAPI mediatype_SetUnknown(IMFMediaType *iface, REFGUID key, IUnknown *unknown)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p, %s, %p\n", This, debugstr_guid(key), unknown);
-
-    return E_NOTIMPL;
+    return IMFAttributes_SetUnknown(&This->attributes.IMFAttributes_iface, key, unknown);
 }
 
 static HRESULT WINAPI mediatype_LockStore(IMFMediaType *iface)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p\n", This);
-
-    return E_NOTIMPL;
+    return IMFAttributes_LockStore(&This->attributes.IMFAttributes_iface);
 }
 
 static HRESULT WINAPI mediatype_UnlockStore(IMFMediaType *iface)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p\n", This);
-
-    return E_NOTIMPL;
+    return IMFAttributes_UnlockStore(&This->attributes.IMFAttributes_iface);
 }
 
 static HRESULT WINAPI mediatype_GetCount(IMFMediaType *iface, UINT32 *items)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p, %p\n", This, items);
-
-    if(items)
-        *items = 0;
-
-    return E_NOTIMPL;
+    return IMFAttributes_GetCount(&This->attributes.IMFAttributes_iface, items);
 }
 
 static HRESULT WINAPI mediatype_GetItemByIndex(IMFMediaType *iface, UINT32 index, GUID *key, PROPVARIANT *value)
 {
     mfmediatype *This = impl_from_IMFMediaType(iface);
-
-    FIXME("%p, %d, %p, %p\n", This, index, key, value);
-
-    return E_NOTIMPL;
+    return IMFAttributes_GetItemByIndex(&This->attributes.IMFAttributes_iface, index, key, value);
 }
 
 static HRESULT WINAPI mediatype_CopyAllItems(IMFMediaType *iface, IMFAttributes *dest)
@@ -1510,14 +1426,16 @@ HRESULT WINAPI MFCreateMediaType(IMFMediaType **type)
     if(!type)
         return E_INVALIDARG;
 
-    object = HeapAlloc( GetProcessHeap(), 0, sizeof(*object) );
+    object = heap_alloc( sizeof(*object) );
     if(!object)
         return E_OUTOFMEMORY;
 
     object->ref = 1;
     object->IMFMediaType_iface.lpVtbl = &mediatype_vtbl;
+    init_attribute_object(&object->attributes, 0);
 
     *type = &object->IMFMediaType_iface;
+
     return S_OK;
 }
 
-- 
2.18.0

